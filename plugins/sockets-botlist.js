import ws from "ws"

const handler = async (m, { conn, usedPrefix, participants }) => {
  try {
    global.conns = global.conns || []
    const MAX_SUBBOTS = 3

    // üåç Detecci√≥n de pa√≠s por prefijo telef√≥nico
    const detectarPais = (numero) => {
      const codigos = {
        "1": "üá∫üá∏ Estados Unidos / üá®üá¶ Canad√°",
        "7": "üá∑üá∫ Rusia / üá∞üáø Kazajist√°n",
        "20": "üá™üá¨ Egipto",
        "27": "üáøüá¶ Sud√°frica",
        "30": "üá¨üá∑ Grecia",
        "31": "üá≥üá± Pa√≠ses Bajos",
        "32": "üáßüá™ B√©lgica",
        "33": "üá´üá∑ Francia",
        "34": "üá™üá∏ Espa√±a",
        "36": "üá≠üá∫ Hungr√≠a",
        "39": "üáÆüáπ Italia",
        "40": "üá∑üá¥ Rumania",
        "41": "üá®üá≠ Suiza",
        "43": "üá¶üáπ Austria",
        "44": "üá¨üáß Reino Unido",
        "45": "üá©üá∞ Dinamarca",
        "46": "üá∏üá™ Suecia",
        "47": "üá≥üá¥ Noruega",
        "48": "üáµüá± Polonia",
        "49": "üá©üá™ Alemania",
        "51": "üáµüá™ Per√∫",
        "52": "üá≤üáΩ M√©xico",
        "53": "üá®üá∫ Cuba",
        "54": "üá¶üá∑ Argentina",
        "55": "üáßüá∑ Brasil",
        "56": "üá®üá± Chile",
        "57": "üá®üá¥ Colombia",
        "58": "üáªüá™ Venezuela",
        "60": "üá≤üáæ Malasia",
        "61": "üá¶üá∫ Australia",
        "62": "üáÆüá© Indonesia",
        "63": "üáµüá≠ Filipinas",
        "64": "üá≥üáø Nueva Zelanda",
        "65": "üá∏üá¨ Singapur",
        "66": "üáπüá≠ Tailandia",
        "81": "üáØüáµ Jap√≥n",
        "82": "üá∞üá∑ Corea del Sur",
        "84": "üáªüá≥ Vietnam",
        "86": "üá®üá≥ China",
        "90": "üáπüá∑ Turqu√≠a",
        "91": "üáÆüá≥ India",
        "92": "üáµüá∞ Pakist√°n",
        "93": "üá¶üá´ Afganist√°n",
        "94": "üá±üá∞ Sri Lanka",
        "95": "üá≤üá≤ Myanmar",
        "98": "üáÆüá∑ Ir√°n",
        "212": "üá≤üá¶ Marruecos",
        "213": "üá©üáø Argelia",
        "216": "üáπüá≥ T√∫nez",
        "218": "üá±üáæ Libia",
        "220": "üá¨üá≤ Gambia",
        "221": "üá∏üá≥ Senegal",
        "222": "üá≤üá∑ Mauritania",
        "223": "üá≤üá± Mali",
        "224": "üá¨üá≥ Guinea",
        "225": "üá®üáÆ Costa de Marfil",
        "226": "üáßüá´ Burkina Faso",
        "227": "üá≥üá™ N√≠ger",
        "228": "üáπüá¨ Togo",
        "229": "üáßüáØ Ben√≠n",
        "230": "üá≤üá∫ Mauricio",
        "231": "üá±üá∑ Liberia",
        "232": "üá∏üá± Sierra Leona",
        "233": "üá¨üá≠ Ghana",
        "234": "üá≥üá¨ Nigeria",
        "235": "üáπüá© Chad",
        "236": "üá®üá´ Rep√∫blica Centroafricana",
        "237": "üá®üá≤ Camer√∫n",
        "238": "üá®üáª Cabo Verde",
        "239": "üá∏üáπ Santo Tom√© y Pr√≠ncipe",
        "240": "üá¨üá∂ Guinea Ecuatorial",
        "241": "üá¨üá¶ Gab√≥n",
        "242": "üá®üá¨ Congo",
        "243": "üá®üá© R.D. del Congo",
        "244": "üá¶üá¥ Angola",
        "245": "üá¨üáº Guinea-Bis√°u",
        "248": "üá∏üá® Seychelles",
        "249": "üá∏üá© Sud√°n",
        "250": "üá∑üáº Ruanda",
        "251": "üá™üáπ Etiop√≠a",
        "252": "üá∏üá¥ Somalia",
        "253": "üá©üáØ Yibuti",
        "254": "üá∞üá™ Kenia",
        "255": "üáπüáø Tanzania",
        "256": "üá∫üá¨ Uganda",
        "257": "üáßüáÆ Burundi",
        "258": "üá≤üáø Mozambique",
        "260": "üáøüá≤ Zambia",
        "261": "üá≤üá¨ Madagascar",
        "263": "üáøüáº Zimbabue",
        "264": "üá≥üá¶ Namibia",
        "265": "üá≤üáº Malaui",
        "266": "üá±üá∏ Lesoto",
        "267": "üáßüáº Botsuana",
        "268": "üá∏üáø Suazilandia",
        "269": "üá∞üá≤ Comoras",
        "290": "üá∏üá≠ Santa Helena",
        "291": "üá™üá∑ Eritrea",
        "297": "üá¶üáº Aruba",
        "298": "üá´üá¥ Islas Feroe",
        "299": "üá¨üá± Groenlandia",
        "350": "üá¨üáÆ Gibraltar",
        "351": "üáµüáπ Portugal",
        "352": "üá±üá∫ Luxemburgo",
        "353": "üáÆüá™ Irlanda",
        "354": "üáÆüá∏ Islandia",
        "355": "üá¶üá± Albania",
        "356": "üá≤üáπ Malta",
        "357": "üá®üáæ Chipre",
        "358": "üá´üáÆ Finlandia",
        "359": "üáßüá¨ Bulgaria",
        "370": "üá±üáπ Lituania",
        "371": "üá±üáª Letonia",
        "372": "üá™üá™ Estonia",
        "373": "üá≤üá© Moldavia",
        "374": "üá¶üá≤ Armenia",
        "375": "üáßüáæ Bielorrusia",
        "376": "üá¶üá© Andorra",
        "377": "üá≤üá® M√≥naco",
        "380": "üá∫üá¶ Ucrania",
        "381": "üá∑üá∏ Serbia",
        "382": "üá≤üá™ Montenegro",
        "385": "üá≠üá∑ Croacia",
        "386": "üá∏üáÆ Eslovenia",
        "387": "üáßüá¶ Bosnia y Herzegovina",
        "389": "üá≤üá∞ Macedonia del Norte",
        "420": "üá®üáø Rep√∫blica Checa",
        "421": "üá∏üá∞ Eslovaquia",
        "423": "üá±üáÆ Liechtenstein",
        "500": "üá´üá∞ Islas Malvinas",
        "501": "üáßüáø Belice",
        "502": "üá¨üáπ Guatemala",
        "503": "üá∏üáª El Salvador",
        "504": "üá≠üá≥ Honduras",
        "505": "üá≥üáÆ Nicaragua",
        "506": "üá®üá∑ Costa Rica",
        "507": "üáµüá¶ Panam√°",
        "509": "üá≠üáπ Hait√≠",
        "51": "üáµüá™ Per√∫",
        "591": "üáßüá¥ Bolivia",
        "592": "üá¨üáæ Guyana",
        "593": "üá™üá® Ecuador",
        "595": "üáµüáæ Paraguay",
        "597": "üá∏üá∑ Surinam",
        "598": "üá∫üáæ Uruguay"
      }

      // Buscar el pa√≠s seg√∫n prefijo
      for (const code in codigos) {
        if (numero.startsWith(code)) return codigos[code]
      }
      return "üåé Desconocido"
    }

    // üïí Conversor de tiempo
    const convertirMsADiasHorasMinutosSegundos = (ms) => {
      const segundos = Math.floor(ms / 1000)
      const minutos = Math.floor(segundos / 60)
      const horas = Math.floor(minutos / 60)
      const d√≠as = Math.floor(horas / 24)
      const segRest = segundos % 60
      const minRest = minutos % 60
      const horasRest = horas % 24
      let resultado = ""
      if (d√≠as) resultado += `${d√≠as}d `
      if (horasRest) resultado += `${horasRest}h `
      if (minRest) resultado += `${minRest}m `
      if (segRest) resultado += `${segRest}s`
      return resultado.trim() || "reci√©n iniciado"
    }

    // üß© Lista total de bots activos
    const allBots = [
      global.conn.user.jid,
      ...new Set(
        global.conns
          .filter(c => c.user && c.ws?.socket && c.ws.socket.readyState !== ws.CLOSED)
          .map(c => c.user.jid)
      )
    ]

    // Informaci√≥n del BOT PRINCIPAL
    const mainNumber = global.conn.user.jid.replace(/[^0-9]/g, '')
    const mainName = global.conn.user.name || "Bot Principal"
    const mainCountry = detectarPais(mainNumber)
    const mainUptime = convertirMsADiasHorasMinutosSegundos(Date.now() - (global.conn.startTime || global.conn.uptime || 0))

    // Informaci√≥n de los SubBots
    const subBots = global.conns
      .filter(c => c.user && c.ws?.socket && c.ws.socket.readyState !== ws.CLOSED)
      .map((c, i) => {
        const numero = c.user.jid.replace(/[^0-9]/g, '')
        const nombre = c.user.name || `SubBot #${i + 1}`
        const pais = detectarPais(numero)
        const uptime = c.uptime
          ? convertirMsADiasHorasMinutosSegundos(Date.now() - c.uptime)
          : "Activo recientemente"
        return `‚îå‚îÄ‚îÄ‚îÄ„Äé ü§ñ SubBot #${i + 1} „Äè
‚îÇ üë§ Nombre: *${nombre}*
‚îÇ üìû N√∫mero: +${numero}
‚îÇ üåç Pa√≠s: ${pais}
‚îÇ ‚è± Uptime: ${uptime}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`
      })

    // Cupos
    const usados = subBots.length
    const libres = Math.max(0, MAX_SUBBOTS - usados)

    // Bots en el grupo
    let groupBots = allBots.filter(bot => participants.some(p => p.id === bot))
    if (!groupBots.includes(global.conn.user.jid)) groupBots.push(global.conn.user.jid)
    const groupBotsText = groupBots.map(bot => `‚Ä¢ +${bot.replace(/[^0-9]/g, '')}`).join("\n") || "Ninguno"

    // ‚ú® Mensaje final
    const message = `
‚ï≠‚îÄ„Äî *üåê PANEL GLOBAL DE BOTS* „Äï‚îÄ‚ïÆ
‚îÇ
‚îÇ ü§ñ *BOT PRINCIPAL*
‚îÇ üë§ Nombre: *${mainName}*
‚îÇ üìû N√∫mero: +${mainNumber}
‚îÇ üåç Pa√≠s: ${mainCountry}
‚îÇ ‚è± Uptime: ${mainUptime}
‚îÇ
‚îú‚îÄ„Äî *CUPOS DE SUBBOTS* „Äï
‚îÇ üîπ Cupos Activos: ${MAX_SUBBOTS}
‚îÇ üî∏ Cupos Usados: ${usados}
‚îÇ ‚ö™ Cupos Libres: ${libres}
‚îÇ
‚îú‚îÄ„Äî *LISTA DE SUBBOTS CONECTADOS* „Äï
${subBots.length > 0 ? subBots.join("\n\n") : "‚úß No hay SubBots conectados actualmente."}
‚îÇ
‚îú‚îÄ„Äî *BOTS EN ESTE GRUPO* „Äï
${groupBotsText}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
`

    const mentionList = allBots.map(bot =>
      bot.endsWith("@s.whatsapp.net") ? bot : `${bot}@s.whatsapp.net`
    )

    await conn.sendMessage(
      m.chat,
      {
        text: message.trim(),
        contextInfo: { mentionedJid: mentionList }
      },
      { quoted: m }
    )

  } catch (error) {
    console.error(error)
    m.reply(`‚ö†Ô∏è Error: ${error.message}`)
  }
}

handler.tags = ["serbot"]
handler.help = ["botlist"]
handler.command = ["botlist", "listbots", "listbot", "bots", "sockets", "socket"]

export default handler